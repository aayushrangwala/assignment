# This file is a template, and might need editing before it works on your project.
image: golang:1.12

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/discovergy/ayush-rangwala


# .go-cache:
#   variables:
#     GOPATH: $CI_PROJECT_DIR/.go
#   before_script:
#     - mkdir -p .go
#   cache:
#     key: build-cache
#     paths:
#       - .go/pkg/mod/
#       - vendor/

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - make dep

stages:
  - test
  - build

lint_code:
  image: golangci/golangci-lint:v1.28.3
  stage: test
  #   extends: .go-cache
  script:
    - make lint

unit_tests:
  stage: test
#   extends: .go-cache
  script:
    - make test

code_coverage:
  stage: test
#   extends: .go-cache
  script:
    - make coverage

build:
  stage: build
#   extends: .go-cache
  script:
    - make build

#build_image:
#  image: docker/dind:latest
#  stage: build
##   extends: .go-cache
#  script:
#    - apk add --update --no-cache make=4.2.1-r2
#    - make ci-release
